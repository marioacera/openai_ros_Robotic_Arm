<launch>

  <arg name="sim" default="true" />
  <arg name="x" default="0.0" />
  <arg name="y" default="0.0" />
  <arg name="z" default="0.4" />
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="0.0" />
  <param name="robot_description" command="$(find xacro)/xacro.py $(find my_moveo_description)/urdf/moveo.gazebo.xacro"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <group if="$(arg sim)">
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model moveo -param robot_description"/>
  </group>

  <remap unless="$(arg sim)" from="/follow_joint_trajectory" to="/moveo/joint_trajectory_controller/follow_joint_trajectory"/>
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find my_moveo_control)/config/moveo_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="moveo" args="joint_trajectory_controller joint_state_controller"/>

  <!-- <include file="$(find moveo_gazebo_moveit_config)/launch/moveit_planning_execution.launch.xml">
    <arg name="sim" value="$(arg sim)"/>
  </include> -->

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/moveo/joint_states"/>
  </node>

  <!--<include file="$(find moveo_gazebo_moveit_config)/launch/moveit_rviz.launch"/>-->
</launch>
